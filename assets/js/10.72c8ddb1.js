(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{518:function(a,s,t){a.exports=t.p+"assets/img/apollo-mysql.3772252f.png"},519:function(a,s,t){a.exports=t.p+"assets/img/apollo-create-app.63bf0537.png"},520:function(a,s,t){a.exports=t.p+"assets/img/apollo-config-publish.f55d626e.png"},521:function(a,s,t){a.exports=t.p+"assets/img/apollo-config-test.09eb63fb.png"},548:function(a,s,t){"use strict";t.r(s);var n=t(22),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[a._v("背景")]),a._v(" "),n("ul",[n("li",[a._v("在微服务发布部署过程中，子服务的数目很多，服务需要进行集群。服务配置使用配置文件存储，那样每次配置信息的修改，服务需要重新发布部署，非常繁琐。")]),a._v(" "),n("li",[a._v("分布式配置中心：微服务中较常变化的配置，放到分布式配置中心。当配置修改，分布式配置中心会将修改的配置推送给服务，服务就能实现配置的实时修改生效，服务不需要重新发布部署。")]),a._v(" "),n("li",[a._v("Apollo：SpringCloud 提供的分布式配置中心 Config，没有管理端，使用起来很不人性化。所以我们这里改为整合 Apollo,实际生产中 SpringCloud 也一般是整合 Apollo。\n"),n("ul",[n("li",[a._v("Apollo 是携程开发的分布式配置中心。")])])])])]),a._v(" "),n("h2",{attrs:{id:"分布式配置中心"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分布式配置中心"}},[a._v("#")]),a._v(" 分布式配置中心")]),a._v(" "),n("h3",{attrs:{id:"分布式配置中心的组成"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分布式配置中心的组成"}},[a._v("#")]),a._v(" 分布式配置中心的组成")]),a._v(" "),n("ul",[n("li",[a._v("分布式配置信息持久化存储化仓库。常用的有：mysql、git。")]),a._v(" "),n("li",[a._v("分布式配置管理端。管理配置信息，进行信息的添加、编辑和修改。")]),a._v(" "),n("li",[a._v("ConfigServer：保存最新配置信息。")]),a._v(" "),n("li",[a._v("Client：需要拉取使用分布式配置的服务，我们就称为 Client。Client 需要整合 Apollo 的 Client 包，实现接收推送的配置信息或拉取配置信息的功能。")])]),a._v(" "),n("h3",{attrs:{id:"分布式配置中心的原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分布式配置中心的原理"}},[a._v("#")]),a._v(" 分布式配置中心的原理")]),a._v(" "),n("ul",[n("li",[a._v("配置管理：通过管理端，对仓库中配置信息进行操作。")]),a._v(" "),n("li",[a._v("配置消息推送：当持久化仓库中存储的配置有变更，通过消息推送机制，将修改的配置推送给 ConfigServer，ConfigServer 中始终保存着最新的配置信息。")]),a._v(" "),n("li",[a._v("Client 获得 ConfigServer 中修改的配置。Client 获得变更配置的常用方案：2 种\n"),n("ul",[n("li",[a._v("Client 能够与 ConfigServer 保持长连接，ConfigServer 将变更的配置实时推送给 Client。")]),a._v(" "),n("li",[a._v("Client 定时拉取 ConfigServer 中的最新配置。")])])])]),a._v(" "),n("h2",{attrs:{id:"apollo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#apollo"}},[a._v("#")]),a._v(" Apollo")]),a._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[a._v("Apollo 分布式配置中心简介")]),a._v(" "),n("ul",[n("li",[a._v("它是一个功能强大的中间件。")]),a._v(" "),n("li",[a._v("它提供 4 种维度管理配置：application、environment、cluster、naspace。")]),a._v(" "),n("li",[a._v("支持发布审核：配置修改，不会生效；需要点击发布，修改的配置才会生效，推送给服务。")]),a._v(" "),n("li",[a._v("配置实时生效：配置修改，1s 以内都会推送到服务。")]),a._v(" "),n("li",[a._v("它提供配置操作的版本管理，支持回退版本。")]),a._v(" "),n("li",[a._v("权限管理：配置很重要，只有少数人有权限操作。")]),a._v(" "),n("li",[a._v("提供 RestfulApi：方便其他平台获取配置信息，方便整合 Apollo。")])])]),a._v(" "),n("h3",{attrs:{id:"apollo-组成-7-个"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#apollo-组成-7-个"}},[a._v("#")]),a._v(" Apollo 组成 7 个")]),a._v(" "),n("ul",[n("li",[a._v("组成：ConfigService、AdminService、Client、Portal、MetaService、Eureka 和 MySQL")]),a._v(" "),n("li",[a._v("ConfigService\n"),n("ul",[n("li",[a._v("提供功能：配置的主动拉取、推送等功能。")]),a._v(" "),n("li",[a._v("服务对象：Client。")])])]),a._v(" "),n("li",[a._v("AdminService\n"),n("ul",[n("li",[a._v("提供的功能：提供配置的修改、发布等功能。AdminService 发布消息时，会通知 ConfigService。")]),a._v(" "),n("li",[a._v("服务对象：Portal。")])])]),a._v(" "),n("li",[a._v("Client\n"),n("ul",[n("li",[a._v("提供的功能：定时拉取配置和接收配置修改通知等功能。SpringCloud 需要整合此，与 ConfigService 长连接，从而实现实时更新配置信息。")]),a._v(" "),n("li",[a._v("与 ConfigService 连接。Client 先要从 MetaService 获取 ConfigService 服务列表，根据负载均衡算法，选择一个 ConfigService 服务通讯。")])])]),a._v(" "),n("li",[a._v("Portal\n"),n("ul",[n("li",[a._v("提供的功能：Apollo 的前端管理端，可以进行项目创建，配置修改，发布等功能。")]),a._v(" "),n("li",[a._v("调用 AdminService 服务接口，修改配置和发布通知。Portal 先要从 MetaService 获取 AdminService 服务列表，根据负载均衡算法，选择一个 AdminService 服务进行通信。")])])]),a._v(" "),n("li",[a._v("Eureka\n"),n("ul",[n("li",[a._v("提供的功能：作为注册中心，提供服务注册和服务发现的功能。ConfigService 和 AdminService 要注册到 Eureka。")]),a._v(" "),n("li",[a._v("Eureka 实际整合在 ConfigService 中。")])])]),a._v(" "),n("li",[a._v("MetaService\n"),n("ul",[n("li",[a._v("提供的功能：对外提供服务发现接口，给其他平台调用。获得 ConfigService  和 AdminService 服务信息列表；这样 Client 和 Portal 不需要注册到 Eureka，也能获取到服务信息列表。\n"),n("ul",[n("li",[a._v("MetaService 也注册到 Eureka，通过 DiscoveryClient 获取服务信息列表。")])])]),a._v(" "),n("li",[a._v("MetaService 实际一般整合在 ConfigService 中，他们在同一个 JVM 中运行。Portal 通过连接 ConfigService 中 MetaService 获取 AdminService 服务列表信息。")])])]),a._v(" "),n("li",[a._v("MySQL\n"),n("ul",[n("li",[a._v("提供功能：提供配置等信息的持久化存储。")])])])]),a._v(" "),n("h3",{attrs:{id:"apollo-实现原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#apollo-实现原理"}},[a._v("#")]),a._v(" Apollo 实现原理")]),a._v(" "),n("ul",[n("li",[a._v("ConfigService 和 Client 保持长连接。\n"),n("ul",[n("li",[a._v("采用 Http Long Polling 技术实现长连接。")]),a._v(" "),n("li",[a._v("因为有长连接，所以才能实现 ConfigService 向 Client 推送配置更新通知，Client 将服务中配置修改为最新的。")]),a._v(" "),n("li",[a._v("Client 默认拉取频率：5 分钟。由于网络抖动，可能配置修改通知没有通知到 Client，Client 定时拉取最新配置，保障配置最终是一致的。")]),a._v(" "),n("li",[a._v("Client 为了保证高可用，会将每次拉取的数据在本地保存一份。当 Client 和 Config 断开连接，Client 可以使用本地的缓存文件中的配置。")]),a._v(" "),n("li",[a._v("ConfigService 默认会与 Client 保持 60s 的长连接。\n"),n("ul",[n("li",[a._v("当 60s 内有配置更新，ConfigService 会通知客户端，将有配置变化的 namespace 告知 Client，Client 根据 namespace 拉取最新配置。")]),a._v(" "),n("li",[a._v("当 60s 内没有配置更新，ConfigService 会给 Client 发送一个 304 状态码的消息给 Client，然后连接中断。")]),a._v(" "),n("li",[a._v("Client 只要接收到服务端的请求（不管是通知拉取配置的请求还是报错请求），都会重新建立长连接。")])])])])]),a._v(" "),n("li",[a._v("配置信息发布和拉取\n"),n("ul",[n("li",[a._v("配置信息发布：Portal 操作配置信息并发布后，ConfigService 会收到消息通知，更新配置，并将变更的配置推送给 Client。")]),a._v(" "),n("li",[a._v("配置拉取：为了防止网络抖动，导致 Client 配置信息不是最新的问题，Client 会通过定时拉取 ConfigService 的配置，保证配置最终是一致的。")])])])]),a._v(" "),n("h2",{attrs:{id:"apollo-平台搭建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#apollo-平台搭建"}},[a._v("#")]),a._v(" Apollo 平台搭建")]),a._v(" "),n("div",{staticClass:"custom-block tip"},[n("ul",[n("li",[a._v("Apollo 目前仅支持 Linux 系统部署。")]),a._v(" "),n("li",[a._v("我们这里选择 CentOS7 搭建 Apollo 平台")])])]),a._v(" "),n("h3",{attrs:{id:"下载搭建-apollo-所需的压缩包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下载搭建-apollo-所需的压缩包"}},[a._v("#")]),a._v(" 下载搭建 Apollo 所需的压缩包")]),a._v(" "),n("ul",[n("li",[a._v("包含三个压缩包：apollo-adminservice-1.6.1-github、apollo-configservice-1.6.1-github、apollo-portal-1.6.1-github。")]),a._v(" "),n("li",[a._v("将三个包放到目录： /thor/lib/apollo/ 下。")])]),a._v(" "),n("h3",{attrs:{id:"创建库表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建库表"}},[a._v("#")]),a._v(" 创建库表")]),a._v(" "),n("ul",[n("li",[a._v("部署 MySQL。这一步可以自己上网搜索怎么在 CentOS7 部署 MySQL。")]),a._v(" "),n("li",[a._v("创建库表\n"),n("ul",[n("li",[a._v("执行脚本：apolloconfigdb.sql。该数据库存储我们的配置信息。")]),a._v(" "),n("li",[a._v("执行脚本：apolloportaldb.sql。该数据库存储 Portal web 管理需要的门户信息。\n"),n("img",{attrs:{src:t(518),alt:""}})])])])]),a._v(" "),n("h3",{attrs:{id:"解压三个包到特定目录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解压三个包到特定目录"}},[a._v("#")]),a._v(" 解压三个包到特定目录")]),a._v(" "),n("div",{staticClass:"language-command line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("mkdir -p /thor/lib/apollo/apollo-adminservice-1.6.1-github\nmkdir -p /thor/lib/apollo/apollo-configservice-1.6.1-github\nmkdir -p /thor/lib/apollo/apollo-portal-1.6.1-github\nunzip -o apollo-adminservice-1.6.1-github.zip -d /thor/lib/apollo/apollo-adminservice-1.6.1-github\nunzip -o apollo-configservice-1.6.1-github.zip -d  /thor/lib/apollo/apollo-configservice-1.6.1-github\nunzip -o apollo-portal-1.6.1-github.zip -d  /thor/lib/apollo/apollo-portal-1.6.1-github\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])]),n("h3",{attrs:{id:"部署-configservice"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#部署-configservice"}},[a._v("#")]),a._v(" 部署 ConfigService")]),a._v(" "),n("ul",[n("li",[a._v("根据不同环境，可以部署多套。这里仅部署一套，方便入门。")]),a._v(" "),n("li",[a._v("ConfigService 服务中包含：ConfigService、MetaService 和 Eureka。")]),a._v(" "),n("li",[a._v("修改 apollo-configservice 启动配置"),n("div",{staticClass:"language-command line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("# 进入配置文件\ncd /thor/lib/apollo/apollo-configservice-1.6.1-github/config\nvi application-github.properties\n\n# 修改配置文件中数据库配置信息\nspring.datasource.url = jdbc:mysql://ip:port/ApolloConfigDB?useSSL=false  characterEncoding=utf8\nspring.datasource.username = user\nspring.datasource.password = password\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br")])])]),a._v(" "),n("li",[a._v("启动服务"),n("div",{staticClass:"language-command line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("/thor/lib/apollo/apollo-configservice-1.6.1-github/scripts/startup.sh\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])])]),a._v(" "),n("li",[a._v("默认端口：8080")])]),a._v(" "),n("h3",{attrs:{id:"部署-apollo-adminservice"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#部署-apollo-adminservice"}},[a._v("#")]),a._v(" 部署 apollo-adminservice")]),a._v(" "),n("ul",[n("li",[a._v("根据不同环境，可以部署多套。这里仅部署一套即可，方便入门。")]),a._v(" "),n("li",[a._v("修改 apollo-adminservice 启动配置"),n("div",{staticClass:"language-command line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("# 进入配置文件\ncd /thor/lib/apollo/apollo-adminservice-1.6.1-github/config\nvi application-github.properties\n\n# 修改配置文件中数据库配置信息\n  spring.datasource.url = jdbc:mysql://ip:port/ApolloConfigDB?useSSL=false&characterEncoding=utf8\n  spring.datasource.username = user\n  spring.datasource.password = password\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br")])])]),a._v(" "),n("li",[a._v("启动服务"),n("div",{staticClass:"language-command line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("/thor/lib/apollo/apollo-adminservice-1.6.1-github/scripts/startup.sh\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])])]),a._v(" "),n("li",[a._v("默认端口：8090")])]),a._v(" "),n("h3",{attrs:{id:"部署-apollo-portal"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#部署-apollo-portal"}},[a._v("#")]),a._v(" 部署 apollo-portal")]),a._v(" "),n("ul",[n("li",[a._v("只需要部署一套即可。")]),a._v(" "),n("li",[a._v("修改 apollo-portal 启动配置。"),n("div",{staticClass:"language-command line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("# 进入配置文件\ncd /thor/lib/apollo/apollo-portal-1.6.1-github/config\nvi application-github.properties\n\n# 修改配置文件中数据库配置信息\nspring.datasource.url = jdbc:mysql://ip:port/ApolloPortalDB?useSSL=false  characterEncoding=utf8\nspring.datasource.username = user\nspring.datasource.password = password\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br")])])]),a._v(" "),n("li",[a._v("配置 portal 连接多套 configservice 和 adminservice。portal 需要通过 configservice 的 metaservice 获取 adminService 服务列表信息，再跟 adminService 通信，所以 portal 设置 configservice 连接信息即可。"),n("div",{staticClass:"language-command line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("# 进入配置文件\ncd /thor/lib/apollo/apollo-portal-1.6.1-github/config\nvi apollo-env.properties\n\n# 修改默认配置\nlocal.meta=http://localhost:8080\ndev.meta=http://localhost:8080\nfat.meta=${fat_meta}\nuat.meta=${uat_meta}\npro.meta=${pro_meta}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br")])])]),a._v(" "),n("li",[a._v("启动服务"),n("div",{staticClass:"language-command line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("/thor/lib/apollo/apollo-portal-1.6.1-github/scripts/startup.sh\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])])]),a._v(" "),n("li",[a._v("默认端口：8070")]),a._v(" "),n("li",[a._v("默认用户/密码：apollo/admin")])]),a._v(" "),n("h2",{attrs:{id:"整合-apollo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#整合-apollo"}},[a._v("#")]),a._v(" 整合 Apollo")]),a._v(" "),n("h3",{attrs:{id:"创建项目应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建项目应用"}},[a._v("#")]),a._v(" 创建项目应用")]),a._v(" "),n("ul",[n("li",[a._v("在 Apollo Portal 管理端里创建项目，专门用于配置对应服务的配置。")]),a._v(" "),n("li",[a._v("我们这里为 apollo-demo 服务创建 test_1 项目\n"),n("img",{attrs:{src:t(519),alt:""}})])]),a._v(" "),n("h3",{attrs:{id:"client-打包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#client-打包"}},[a._v("#")]),a._v(" client 打包")]),a._v(" "),n("ul",[n("li",[a._v("client 需要通过源码打包到我们本地仓库，引用本地仓库中对应的 Maven 包，即可整合 client。")]),a._v(" "),n("li",[a._v("打包方式有 2 种\n"),n("ul",[n("li",[a._v("统一打包：进入源码的 scripts/ 目录下，点击 build.bat，即可将全部包都打到本地仓库。")]),a._v(" "),n("li",[a._v("单一打包：通过 idea  maven 一个个包的打。")])])])]),a._v(" "),n("h3",{attrs:{id:"maven-依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#maven-依赖"}},[a._v("#")]),a._v(" Maven 依赖")]),a._v(" "),n("ul",[n("li",[a._v("Client Maven 依赖时上一步打到本地 Maven 仓库。")]),a._v(" "),n("li",[a._v("Maven 依赖如下"),n("div",{staticClass:"language-Maven line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("<dependency>\n  <groupId>com.ctrip.framework.apollo</groupId>\n  <artifactId>apollo-client</artifactId>\n  <version>1.1.0</version>\n</dependency>\n<dependency>\n  <groupId>com.ctrip.framework.apollo</groupId>\n  <artifactId>apollo-core</artifactId>\n  <version>1.1.0</version>\n</dependency>\n\n<dependency>\n    <groupId>org.projectlombok</groupId>\n    <artifactId>lombok</artifactId>\n    <scope>provided</scope>\n</dependency>\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br")])])])]),a._v(" "),n("h3",{attrs:{id:"application-yml-配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#application-yml-配置"}},[a._v("#")]),a._v(" application.yml 配置")]),a._v(" "),n("div",{staticClass:"language-.yml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("app:\n  ### portal 中新建 Application 的 AppId\n  id: test_1\napollo:\n  ### configserver 的地址。该地址在 IDEA 开发工具对应服务器的 VM OPTION 中配置实际的地址即可\n  meta: http://{configserver.host}:8080\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])]),n("h3",{attrs:{id:"启动类添加注解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动类添加注解"}},[a._v("#")]),a._v(" 启动类添加注解")]),a._v(" "),n("ul",[n("li",[a._v("开启 Client 框架功能"),n("div",{staticClass:"language-Java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@EnableApolloConfig")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])])])]),a._v(" "),n("h3",{attrs:{id:"配置类获取配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置类获取配置"}},[a._v("#")]),a._v(" 配置类获取配置")]),a._v(" "),n("ul",[n("li",[a._v('使用 @Value() 获取配置。@Value() 使用时，最好设置默认值：@Value("${value:默认值}")')]),a._v(" "),n("li",[a._v("代码"),n("div",{staticClass:"language-Java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Data")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Component")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ApplicationConfig")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"${apollo.host:default}"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" apolloHost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br")])])])]),a._v(" "),n("h3",{attrs:{id:"控制层提供接口获取配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#控制层提供接口获取配置"}},[a._v("#")]),a._v(" 控制层提供接口获取配置")]),a._v(" "),n("ul",[n("li",[a._v("操作 Apollo 的 Portal 添加配置并发布。\n"),n("img",{attrs:{src:t(520),alt:""}})]),a._v(" "),n("li",[a._v("通过接口获取配置，看看配置是否实时更新。")]),a._v(" "),n("li",[a._v("代码"),n("div",{staticClass:"language-Java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@RestController")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ConfigController")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Autowired")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ApplicationConfig")]),a._v(" applicationConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@GetMapping")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/config/get"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("getConfigValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" applicationConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("getApolloHost")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br")])])]),a._v(" "),n("li",[a._v("测试接口，获得最新配置。每次 Portal 修改并发布配置参数信息，我们客户端能够实时获得更新\n"),n("img",{attrs:{src:t(521),alt:""}})])]),a._v(" "),n("h2",{attrs:{id:"github-项目-demo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#github-项目-demo"}},[a._v("#")]),a._v(" GitHub 项目 demo")]),a._v(" "),n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://github.com/ChenFengHub/springcloud-demo",target:"_blank",rel:"noopener noreferrer"}},[a._v("整个 demo GitHub 地址"),n("OutboundLink")],1)])]),a._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://github.com/ChenFengHub/springcloud-demo/tree/master/apollo-demo",target:"_blank",rel:"noopener noreferrer"}},[a._v("Apollo 例子的 GitHub 地址"),n("OutboundLink")],1)])])])])}),[],!1,null,null,null);s.default=e.exports}}]);